/*!
 * Start Bootstrap - PhotoMap_Admin v1.0.0 (https://github.com/RunaticMoon/PhotoMap_Admin#readme)
 * Copyright 2013-2020 RunaticMoon
 * Licensed under ISC (https://github.com/BlackrockDigital/photomap_admin_page/blob/master/LICENSE)
 */

var stageWidth=1e3,stageHeight=1e3,stage=new Konva.Stage({container:"container",width:stageWidth,height:stageHeight,draggable:!0}),layer=new Konva.Layer;stage.add(layer);var layerStory=new Konva.Layer;stage.add(layerStory);var el,newPoint,newPlace,offset,layerUser=new Konva.Layer;function fitStageIntoParentContainer(){var e=document.querySelector("#stage-parent").offsetWidth/stageWidth;stage.width(stageWidth*e),stage.height(stageHeight*e),stage.scale({x:e,y:e}),stage.draw()}stage.add(layerUser),window.addEventListener("resize",fitStageIntoParentContainer);var scaleBy=1.01;function scalerInit(){$("#canvasScaler").val(stage.scaleX()),$("#canvasScaler").on("input",function(){var e=$("#canvasScaler").val(),t=stage.scaleX(),a=stage.width()/2/t-stage.x()/t,s=stage.height()/2/t-stage.y()/t;stage.scale({x:e,y:e});var n={x:-(a-stage.width()/2/e)*e,y:-(s-stage.height()/2/e)*e};stage.position(n),stage.batchDraw(),el=$(this),width=el.width(),newPoint=(el.val()-el.attr("min"))/(el.attr("max")-el.attr("min")),console.log(newPoint),offset=-1.7,newPoint<0?newPlace=0:1<newPoint?newPlace=width:(newPlace=width*newPoint+offset,offset-=newPoint);var i=document.querySelector("#stage-parent").offsetWidth/stageWidth;console.log(i),el.next("output").css({left:newPlace,marginLeft:offset+"%"}).text("x"+Math.round(el.val()/i*10)/10)}).trigger("input"),$("#canvasScaler").mouseover(function(){(el=$(this)).next("output").css({display:"inline-block"})}),$("#canvasScaler").mouseleave(function(){(el=$(this)).next("output").css({display:"none"})}),$("#canvasScaler").next("output").css({display:"none"})}stage.on("wheel",function(e){e.evt.preventDefault();var t=stage.scaleX();if(2<t)stage.scale({x:2,y:2});else if(t<.1)stage.scale({x:.1,y:.1});else{var a=stage.getPointerPosition().x/t-stage.x()/t,s=stage.getPointerPosition().y/t-stage.y()/t,n=0<e.evt.deltaY?t*scaleBy:t/scaleBy;stage.scale({x:n,y:n}),$("#canvasScaler").val(n);var i={x:-(a-stage.getPointerPosition().x/n)*n,y:-(s-stage.getPointerPosition().y/n)*n};stage.position(i),stage.batchDraw()}});